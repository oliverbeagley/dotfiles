export XDG_DATA_HOME=$HOME/.local/share
export XDG_CONFIG_HOME=$HOME/.config
export XDG_STATE_HOME=$HOME/.local/state
export XDG_CACHE_HOME=$HOME/.cache

export PATH="$PATH:/home/olly/.local/bin"

join() {
  local IFS="$1"
  shift
  echo "$*"
}


WSL_USERNAME=$(/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe '[System.Security.Principal.WindowsIdentity]::GetCurrent().Name.Split("\")[1]')
WSL_PATHS_ARR=(
  "/mnt/c/ProgramData/chocolatey/bin"
  "/mnt/c/Program Files/Docker/Docker/resources/bin"
  "/mnt/c/Users/${WSL_USERNAME}/AppData/Local/Programs/Microsoft VS Code/bin"
  "/mnt/c/Windows/System32/WindowsPowerShell/v1.0/"
)
WSL_PATH=$(join ':' ${WSL_PATHS_ARR[@]})
export PATH="$PATH:${WSL_PATH}"

export VISUAL=nvim
export EDITOR="${VISUAL}"

export ZSH="$HOME/.oh-my-zsh"

{{ if not .personal -}}

# Work related env ars
export R_HOME_USER="$XDG_CONFIG_HOME/R"
export R_PROFILE_USER="$XDG_CONFIG_HOME/R/profile"
export R_HISTFILE="$XDG_CONFIG_HOME/R/history"

{{- end }}

{{ $plugins := .zsh_plugins.personal -}}
{{ if not .personal -}}
{{   $plugins = concat $plugins .zsh_plugins.work -}}
{{ end -}}
plugins=(
{{- range $plugins }}
  {{ . }}
{{- end }}
)

source $ZSH/oh-my-zsh.sh

# this must be after omz
eval "$(oh-my-posh init zsh --config ${XDG_CONFIG_HOME}/ohmyposh/config.toml)"

alias eza='eza --icons=auto'
alias ezal='eza --long --git'
alias R='R --no-save'
alias bat="batcat"

alias cat='bat'
alias ls='eza'
alias vim='nvim'

# Because ripgrep doesn't look for config in the proper place
export RIPGREP_CONFIG_PATH=${XDG_CONFIG_HOME}/ripgrep/config

autoload -Uz compinit
zstyle ':completion:*' menu select
fpath+=~/.zfunc

eval "$(aactivator init)"
eval $(thefuck --alias)

fif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for"; return 1; fi
  rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}
